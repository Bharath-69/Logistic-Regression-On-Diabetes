import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score, mean_absolute_error
data=pd.read_csv('students.csv')
data.head()
data.shape
data.isnull.sum()
from sklearn.model_selection import train_test_split
x=data.drop('Hours',axis=1)
y=data['Hours']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)
# model building
from sklearn.linear_model import LinearRegression
reg=LinearRegression()
reg.fit(x_train,y_train)
y_pred=reg.predict(x_test)
print(y_pred)
import matplotlib.pyplot as plt
data.plot(x='Hours',y='Marks',style='o',color='red')
plt.title('Relation between Hours and Marks')
plt.xlabel('Hours')
plt.ylabel('Marks')
from sklearn.metrics import accuracy_score, mean_absolute_error
print("mean absolute error",mean_absolute_error(y_test,y_pred))
# Assuming y_test and y_pred are your actual and predicted values
from sklearn.metrics import mean_squared_error, r2_score
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)
print("Mean Squared Error (MSE):", mse)
print("Root Mean Squared Error (RMSE):", rmse)
print("RÂ² Score:", r2)
line=reg.coef_*x+reg.intercept_
plt.scatter(x,y)
plt.plot (x,line, c='green')
